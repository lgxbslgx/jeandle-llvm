diff --git a/.github/workflows/jeandle-llvm-test.yml b/.github/workflows/jeandle-llvm-test.yml
index b95b284f9da8..dc65e5e4a661 100644
--- a/.github/workflows/jeandle-llvm-test.yml
+++ b/.github/workflows/jeandle-llvm-test.yml
@@ -11,25 +11,28 @@ concurrency:
   cancel-in-progress: true
 
 jobs:
+  test-linux-x64:
+    name: linux-x64
+    uses: ./.github/workflows/test-linux.yml
+    with:
+      runs-on: ubuntu-22.04
+      target: X86
 
-  test:
-    name: "jeandle-llvm test"
-    runs-on: ubuntu-22.04
-
-    steps:
-      - name: 'checkout the source code'
-        uses: actions/checkout@v4
-        with:
-          repository: ${{ github.event.pull_request.head.repo.full_name }}
-          ref: ${{ github.event.pull_request.head.ref }}
-          fetch-depth: 1
+  test-linux-aarch64:
+    name: linux-aarch64
+    uses: ./.github/workflows/test-linux.yml
+    with:
+      runs-on: ubuntu-22.04-arm
+      target: AArch64
+    if: ${{ contains(github.event.pull_request.labels.*.name, 'AArch64') }}
 
-      - name: build and test
-        run : |
-          mkdir build
-          cd build
-          cmake -G "Unix Makefiles" -DLLVM_TARGETS_TO_BUILD="X86;RISCV;AArch64" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_DYLIB_COMPONENTS=all ../llvm
-          make check-llvm -j $[$(nproc)/2]
+  test-linux-riscv64:
+    name: linux-riscv64
+    uses: ./.github/workflows/test-linux.yml
+    with:
+      runs-on: riscv-builders
+      target: RISCV
+    if: ${{ contains(github.event.pull_request.labels.*.name, 'RISC-V') }}
 
   clang-format:
     name: "clang-format check"
diff --git a/.github/workflows/test-linux.yml b/.github/workflows/test-linux.yml
new file mode 100644
index 000000000000..c3b957ce22b5
--- /dev/null
+++ b/.github/workflows/test-linux.yml
@@ -0,0 +1,31 @@
+name: 'Test (linux)'
+
+on:
+  workflow_call:
+    inputs:
+      runs-on:
+        required: true
+        type: string
+      target:
+        required: true
+        type: string
+
+jobs:
+  test:
+    name: test
+    runs-on: ${{ inputs.runs-on }}
+
+    steps:
+      - name: 'checkout the source code'
+        uses: actions/checkout@v4
+        with:
+          repository: ${{ github.event.pull_request.head.repo.full_name }}
+          ref: ${{ github.event.pull_request.head.ref }}
+          fetch-depth: 1
+
+      - name: build and test
+        run : |
+          mkdir build
+          cd build
+          cmake -G "Unix Makefiles" -DLLVM_TARGETS_TO_BUILD=${{ inputs.target }} -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_DYLIB_COMPONENTS=all ../llvm
+          make check-llvm -j $[$(nproc)/2]
